@model Rupor.Public.Models.Profile.PostModel
@{
    ViewBag.Title = "Post";
}

@section styles{
    <link rel="stylesheet" href="https://cdn.quilljs.com/1.3.6/quill.bubble.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.0.7/dist/css/select2.min.css" integrity="sha256-MeSf8Rmg3b5qLFlijnpxk6l+IJkiR91//YGPCrCmogU=" crossorigin="anonymous">
    <style>
        img {
            display: block;
            width: 100%;
        }

        .ql-container {
            font-size: 14pt;
            font-family: Raleway, Arial, sans-serif;
        }
    </style>
}
@Model.Status
<button id="btnSaveDraft" class="app-btn app-btn__default" type="button"> в черновик</button>
<button id="btnSave" class="app-btn app-btn__blackblue" type="button"> сохранить</button>
<div class="editor-wrapper">
    <img id="titleImage" src="" data-image="" />
    <input type="file" id="uploadFile" />
    <h2 contenteditable="true">
        @if (!string.IsNullOrEmpty(Model.Title))
        {
            <span>@Model.Title</span>
        }
        else
        {
            <i>Заголовок...</i>
        }
    </h2>
    <button id="showEditor" class="btn btn-default" type="button"><i class="fa fa-plus"></i></button>
    <div id="editor">
        @Html.Raw(Model.Content)
    </div>
    @Html.ListBoxFor(x=>x.Sections,Model.SelectSections,new { @class="select2"})
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.TitleImageId)
    @Html.AntiForgeryToken()

</div>

@section scripts{
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.7/dist/js/select2.min.js" integrity="sha256-GHC3xFbrevQ0aRcWg5JElUOncXYXxTtMOuA74cWAPTw=" crossorigin="anonymous"></script>
    <script>

        $("select").select2();

        var toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
            ['blockquote'],
            [{ 'header': 1 }, { 'header': 2 }],               // custom button values
            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
            [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
            [{ 'direction': 'rtl' }],                         // text direction
            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
            [{ 'align': [] }],
            ['image'],
            ['clean']                                         // remove formatting button
        ];

        let imageHandler = () => {

        }
        let quill = new Quill('#editor', {
            theme: 'bubble',
            placeholder: 'Текст статьи',

            modules: {
                toolbar: {
                    container:
                        toolbarOptions,
                    handlers: {
                        images: imageHandler
                    }
                }
            }
        });

        $(document).on('contextmenu', "#editor", (e) => {
            e.preventDefault();
            quill.theme.tooltip.edit();
            quill.theme.tooltip.show();
            return false;
        });
        $("#showEditor").click(() => {
            quill.theme.tooltip.edit();
            quill.theme.tooltip.show();
        });

        $("#uploadFile").change((e) => {

            console.log(e.target.files);
            let data = new FormData();
            for (var i = 0; i < e.target.files.length; i++) {
                data.append(`file${i}`, e.target.files[i]);
            }
            saveImage(data);
        });

        $("#btnSave").click(() => {
            savePost(false);
        });
        $("#btnSaveDraft").click(() => {
            savePost(true);
        });

        let saveImage = function (data) {
            let id = 0;

            $.ajax({
                type: "POST",
                url: "/Common/SaveArticleImage",
                contentType: false,
                processData: false,
                data: data,
                success: (d) => {
                    updateImage(`/Pic/GetArticleImage/${d.imageId}`, d.imageId);
                },
                error: () => {
                    console.log("error upload file");
                }
            });
        }
        let updateImage = function (url, id) {
            $("#titleImage").prop("src", url);
            console.log(id);
            $("#TitleImageId").val(id);
        }
        let savePost = function (isDraft) {
            let title = $(".editor-wrapper h2").text();
            let contentPost = $("#editor .ql-editor").html();
            let id = $("#Id").val();
            let titleImageId = $("#TitleImageId").val();
            let token = $('input[name="__RequestVerificationToken"]').val();
            console.log(token);
            console.log(title);
            console.log(contentPost);
            $.post("", {
                Title: title,
                Content: contentPost,
                IsDraft: isDraft,
                Id: id,
                TitleImageId: titleImageId,
                __RequestVerificationToken: token
            });
        }
    </script>
}


